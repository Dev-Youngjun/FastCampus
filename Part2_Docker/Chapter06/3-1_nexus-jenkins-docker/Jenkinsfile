def mainDir="Part2_Docker/Chapter06/3-1_nexus-jenkins-docker"
def region="ap-northeast-2"
def nexusUrl="nexus.jun-dev.me:8082"
def repository="nexus-docker-repo"
def deployHost="ip-172-31-1-251.ap-northeast-2.compute.internal"
def tagName="1.0"
def nexusid="jun"
def nexuspw="92Wns98thf!"
def jenkins_ip="ip-172-31-0-221.ap-northeast-2.compute.internal"

pipeline {
    agent any

    stages {
        stage('Pull Codes from Github'){
            steps{
                checkout scm
            }
        }
        stage('Build Codes by Gradle') {
            steps {
                sh """
                cd ${mainDir}
                ./gradlew clean build
                """
            }
        }
        stage('Build Docker Image by Jib & Push to Nexus Registry') {
            steps {
                sh """
                    cd ${mainDir}
                    docker login -u ${nexusid} -p ${nexuspw} ${nexusUrl}
                    ./gradlew jib -Djib.to.image=${nexusUrl}/${repository}:${tagName} -Djib.console='plain'
                """
            }
        }
        stage('Scan Security CVE at Clair Scanner') {
            steps {
                script {
                    try {
                        sh """
                            docker pull ${nexusUrl}/${repository}:${tagName}
                            trivy image --clear-cache -t json -o /var/jenkins_home/trivy_report.json ${nexusUrl}/${repository}:${tagName}
                        """
                    } catch (err) {
                        echo err.getMessage()
                    }
                }
                echo currentBuild.result
            }
        }
        stage('Deploy container to AWS EC2 VM'){
            steps{
                sshagent(credentials : ["deploy-key"]) {
                    sh "ssh -o StrictHostKeyChecking=no ubuntu@${deployHost} \
                     'docker login -u ${nexusid} -p ${nexuspw} ${nexusUrl}; \
                      docker run -d -p 80:8080 -t ${nexusUrl}/${repository}:${tagName};'"
                }
            }
        }
    }
}
